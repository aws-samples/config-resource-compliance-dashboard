# STEP 1
# Supports deployment of CRCD CRT resources

AWSTemplateFormatVersion: '2010-09-09'
Description: 'CRCD Dashboard - Shared resources to allow deploymnet of AWS Config conformance pack recommended by CIRT'

Parameters:
  ConfigDelegatedAdminAccount:
    Type: String
    Description: 'AWS Account ID of the AWS Config delegated administrator'
    Default: '767398150443' # TODO remove this is only for dev


Resources:
  DeliveryS3Bucket:
  # checkov:skip=CKV_AWS_18: No need to have access logging in this bucket
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'awsconfigconforms-crcd-cirt-${AWS::AccountId}'  # No region suffix needed as this is central
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  DeliveryS3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref DeliveryS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowOrganizationAccess
            Effect: Allow
            Principal:
              Service: 
                - config.amazonaws.com
                - cloudformation.amazonaws.com
            Action:
              - s3:GetObject
              - s3:GetBucketAcl
            Resource:
              - !GetAtt DeliveryS3Bucket.Arn
              - !Sub '${DeliveryS3Bucket.Arn}/*'
            Condition:
              StringEquals:
                aws:PrincipalOrgID: '${aws:PrincipalOrgID}'
              Bool:
                aws:SecureTransport: true
          - Sid: DelegatedAdminAccess
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:${AWS::Partition}:iam::${ConfigDelegatedAdminAccount}:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms'
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetBucketAcl
            Resource:
              - !GetAtt DeliveryS3Bucket.Arn
              - !Sub '${DeliveryS3Bucket.Arn}/*'
            Condition:
              Bool:
                aws:SecureTransport: true


#  DeliveryS3BucketPolicy:
#    Type: 'AWS::S3::BucketPolicy'
#    Properties:
#      Bucket: !Ref DeliveryS3Bucket
#      PolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Sid: AWSConfigConformsCheckAcls
#            Action: s3:GetBucketAcl
#            Effect: Allow
#            Resource: !GetAtt DeliveryS3Bucket.Arn
#            Principal:
#              # Service: config.amazonaws.com
#              AWS: "*"
#              # does not deploy
#              #Service: 
#              #  - !Sub "arn:${AWS::Partition}:iam::*:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms"
#              #  - !Sub "arn:${AWS::Partition}:iam::*:role/aws-service-role/config.amazonaws.com/AWSServiceRoleForConfig"
#            Condition:
#              StringEquals:
#                aws:PrincipalOrgID: ${aws:PrincipalOrgID}
#              ArnLike:
#                aws:PrincipalArn:
#                  - !Sub "arn:${AWS::Partition}:iam::*:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms"
#                  - !Sub "arn:${AWS::Partition}:iam::*:role/aws-service-role/config.amazonaws.com/AWSServiceRoleForConfig"
#              Bool:
#                aws:SecureTransport: true
#          - Sid: AWSConfigConformsReadWriteBucket
#            Action:
#              - s3:PutObject
#              - s3:GetObject
#            Effect: Allow
#            Resource: !Sub ${DeliveryS3Bucket.Arn}/*
#            Principal:
#              AWS: "*"
#            Condition:
#              StringEquals:
#                aws:PrincipalOrgID: ${aws:PrincipalOrgID}
#              ArnLike:
#                aws:PrincipalArn:
#                  - !Sub "arn:${AWS::Partition}:iam::*:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms"
#                  - !Sub "arn:${AWS::Partition}:iam::*:role/aws-service-role/config.amazonaws.com/AWSServiceRoleForConfig"
#              Bool:
#                aws:SecureTransport: true

Outputs:
  BucketName:
    Description: Name of the created S3 bucket
    Value: !Ref DeliveryS3Bucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'
  BucketArn:
    Description: ARN of the created S3 bucket
    Value: !GetAtt DeliveryS3Bucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-BucketArn'